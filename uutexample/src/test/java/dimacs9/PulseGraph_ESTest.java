/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 18 23:24:50 GMT 2022
 */

package dimacs9;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dimacs9.EdgePulse;
import dimacs9.FinalVertexPulse;
import dimacs9.PulseGraph;
import dimacs9.VertexPulse;
import java.util.Collection;
import org.junit.runner.RunWith;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PulseGraph_ESTest extends PulseGraph_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2319);
      boolean boolean0 = pulseGraph0.removeAllVertices((Collection<? extends VertexPulse>) null);
      assertFalse(boolean0);
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(2319, pulseGraph0.getNumNodes());
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2885);
      pulseGraph0.SetConstraint(2885);
      assertEquals(2885, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(0);
      EdgePulse edgePulse0 = finalVertexPulse0.getReversedEdges();
      boolean boolean0 = pulseGraph0.containsEdge(edgePulse0);
      assertFalse(boolean0);
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getNumNodes());
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2319);
      pulseGraph0.getVertexByID(620);
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(2319, pulseGraph0.getNumNodes());
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(914);
      pulseGraph0.edgeSet();
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(914, pulseGraph0.getNumNodes());
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(0);
      EdgePulse edgePulse0 = finalVertexPulse0.getReversedEdges();
      double double0 = pulseGraph0.getEdgeWeight(edgePulse0);
      assertEquals(0, pulseGraph0.getNumNodes());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2319);
      pulseGraph0.vertexSet();
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(2319, pulseGraph0.getNumNodes());
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2885);
      VertexPulse vertexPulse0 = new VertexPulse(136);
      pulseGraph0.getEdge(vertexPulse0, vertexPulse0);
      assertEquals(2885, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      pulseGraph0.edgesOf((VertexPulse) null);
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getNumNodes());
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2885);
      int int0 = pulseGraph0.getCt();
      assertEquals(0, int0);
      assertEquals(2885, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCd());
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(14);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(0);
      pulseGraph0.removeEdge((VertexPulse) finalVertexPulse0, (VertexPulse) finalVertexPulse0);
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(14, pulseGraph0.getNumNodes());
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      pulseGraph0.setPrimalBound(0);
      assertEquals(0, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(0);
      boolean boolean0 = pulseGraph0.containsEdge((VertexPulse) finalVertexPulse0, (VertexPulse) finalVertexPulse0);
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
      assertFalse(boolean0);
      assertEquals(0, pulseGraph0.getNumNodes());
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(0);
      boolean boolean0 = pulseGraph0.addEdge((VertexPulse) finalVertexPulse0, (VertexPulse) finalVertexPulse0, (EdgePulse) null);
      assertEquals(0, pulseGraph0.getNumNodes());
      assertFalse(boolean0);
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(914);
      boolean boolean0 = pulseGraph0.removeAllEdges((Collection<? extends EdgePulse>) null);
      assertEquals(914, pulseGraph0.getNumNodes());
      assertFalse(boolean0);
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2885);
      pulseGraph0.getEdgeFactory();
      assertEquals(2885, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2319);
      VertexPulse vertexPulse0 = new VertexPulse(2319);
      pulseGraph0.getAllEdges((VertexPulse) null, vertexPulse0);
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(2319, pulseGraph0.getNumNodes());
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(914);
      pulseGraph0.removeAllEdges((VertexPulse) null, (VertexPulse) null);
      assertEquals(914, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(14);
      int int0 = pulseGraph0.getCd();
      assertEquals(0, int0);
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(14, pulseGraph0.getNumNodes());
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(14);
      pulseGraph0.getEdgeSource((EdgePulse) null);
      assertEquals(14, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(914);
      boolean boolean0 = pulseGraph0.removeEdge((EdgePulse) null);
      assertEquals(914, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
      assertFalse(boolean0);
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(14);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(0);
      boolean boolean0 = pulseGraph0.addFinalVertex(finalVertexPulse0);
      assertTrue(boolean0);
      
      VertexPulse vertexPulse0 = pulseGraph0.getVertexByID(0);
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(14, pulseGraph0.getNumNodes());
      assertNotNull(vertexPulse0);
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(1864);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(1864);
      boolean boolean0 = pulseGraph0.removeVertex((VertexPulse) finalVertexPulse0);
      assertFalse(boolean0);
      assertEquals(1864, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(0);
      pulseGraph0.addEdge((VertexPulse) finalVertexPulse0, (VertexPulse) finalVertexPulse0);
      assertEquals(0, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2885);
      int int0 = pulseGraph0.getNumNodes();
      assertEquals(2885, int0);
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(0);
      boolean boolean0 = pulseGraph0.containsVertex((VertexPulse) finalVertexPulse0);
      assertEquals(0, pulseGraph0.getNumNodes());
      assertFalse(boolean0);
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2885);
      VertexPulse vertexPulse0 = new VertexPulse(136);
      pulseGraph0.addVertex(vertexPulse0);
      pulseGraph0.addWeightedEdge(vertexPulse0, vertexPulse0, Integer.MAX_VALUE, 2885, 0);
      int int0 = pulseGraph0.getCd();
      assertEquals(2885, pulseGraph0.getCt());
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2319);
      pulseGraph0.getEdgeTarget((EdgePulse) null);
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(2319, pulseGraph0.getNumNodes());
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      // Undeclared exception!
      try { 
        pulseGraph0.addWeightedEdge((VertexPulse) null, (VertexPulse) null, 0, 0, Integer.MAX_VALUE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      assertEquals(0, pulseGraph0.getNumNodes());
      
      pulseGraph0.resetNetwork();
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2885);
      // Undeclared exception!
      try { 
        pulseGraph0.resetNetwork();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      PulseGraph pulseGraph0 = null;
      try {
        pulseGraph0 = new PulseGraph((-873));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(894);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(894);
      // Undeclared exception!
      try { 
        pulseGraph0.addFinalVertex(finalVertexPulse0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 894
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(4);
      PulseGraph.vertexes = null;
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(1148);
      // Undeclared exception!
      try { 
        pulseGraph0.addFinalVertex(finalVertexPulse0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(0);
      // Undeclared exception!
      try { 
        pulseGraph0.addVertex((VertexPulse) finalVertexPulse0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(1);
      PulseGraph.vertexes = null;
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(1);
      // Undeclared exception!
      try { 
        pulseGraph0.addVertex((VertexPulse) finalVertexPulse0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      // Undeclared exception!
      try { 
        pulseGraph0.getVertexByID((-2273));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2273
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2319);
      PulseGraph.vertexes = null;
      // Undeclared exception!
      try { 
        pulseGraph0.getVertexByID(616);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(1117);
      VertexPulse[] vertexPulseArray0 = new VertexPulse[2];
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse((-1751));
      vertexPulseArray0[0] = (VertexPulse) finalVertexPulse0;
      vertexPulseArray0[1] = (VertexPulse) finalVertexPulse0;
      PulseGraph.vertexes = vertexPulseArray0;
      // Undeclared exception!
      try { 
        pulseGraph0.resetNetwork();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2885);
      VertexPulse vertexPulse0 = new VertexPulse(136);
      pulseGraph0.addVertex(vertexPulse0);
      pulseGraph0.addWeightedEdge(vertexPulse0, vertexPulse0, Integer.MAX_VALUE, 2885, 0);
      int int0 = pulseGraph0.getCt();
      assertEquals(Integer.MAX_VALUE, pulseGraph0.getCd());
      assertEquals(2885, int0);
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      int int0 = pulseGraph0.getNumNodes();
      assertEquals(0, int0);
      assertEquals(0, pulseGraph0.getCt());
      assertEquals(0, pulseGraph0.getCd());
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(3389);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(1);
      boolean boolean0 = pulseGraph0.addFinalVertex(finalVertexPulse0);
      assertTrue(boolean0);
      
      VertexPulse vertexPulse0 = pulseGraph0.getVertexByID(1);
      assertEquals(3389, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
      assertNotNull(vertexPulse0);
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(1864);
      VertexPulse vertexPulse0 = new VertexPulse(1101);
      VertexPulse vertexPulse1 = vertexPulse0.getBLeftDist();
      boolean boolean0 = pulseGraph0.addVertex(vertexPulse1);
      assertTrue(boolean0);
      
      vertexPulse1.maxDist = Integer.MAX_VALUE;
      VertexPulse vertexPulse2 = pulseGraph0.getVertexByID(1101);
      assertNotNull(vertexPulse2);
      assertEquals(1864, pulseGraph0.getNumNodes());
      assertEquals(0, pulseGraph0.getCd());
      assertEquals(0, pulseGraph0.getCt());
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(0);
      // Undeclared exception!
      try { 
        pulseGraph0.addWeightedEdge(finalVertexPulse0, finalVertexPulse0, (-3012), 1328, Integer.MAX_VALUE);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(2625);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse((-968));
      // Undeclared exception!
      try { 
        pulseGraph0.addWeightedEdge(finalVertexPulse0, finalVertexPulse0, 3, (-968), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -968
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(1096);
      FinalVertexPulse finalVertexPulse1 = new FinalVertexPulse(0);
      VertexPulse[] vertexPulseArray0 = new VertexPulse[5];
      PulseGraph.vertexes = vertexPulseArray0;
      // Undeclared exception!
      try { 
        pulseGraph0.addWeightedEdge(finalVertexPulse0, finalVertexPulse1, Integer.MAX_VALUE, 0, (-664));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      PulseGraph pulseGraph0 = new PulseGraph(0);
      FinalVertexPulse finalVertexPulse0 = new FinalVertexPulse(1096);
      FinalVertexPulse finalVertexPulse1 = new FinalVertexPulse(0);
      VertexPulse[] vertexPulseArray0 = new VertexPulse[5];
      vertexPulseArray0[0] = (VertexPulse) finalVertexPulse0;
      PulseGraph.vertexes = vertexPulseArray0;
      // Undeclared exception!
      try { 
        pulseGraph0.addWeightedEdge(finalVertexPulse0, finalVertexPulse1, Integer.MAX_VALUE, 0, (-664));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1096
         //
         verifyException("dimacs9.PulseGraph", e);
      }
  }
}
