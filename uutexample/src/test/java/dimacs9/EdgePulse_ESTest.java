/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 18 23:21:32 GMT 2022
 */

package dimacs9;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import dimacs9.EdgePulse;
import dimacs9.VertexPulse;
import org.junit.runner.RunWith;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EdgePulse_ESTest extends EdgePulse_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse((-1579));
      EdgePulse edgePulse0 = new EdgePulse((-2671), 272, vertexPulse0, vertexPulse0, 0);
      edgePulse0.getTarget();
      assertEquals((-2671), edgePulse0.getWeightDist());
      assertEquals(0, edgePulse0.getID());
      assertEquals(272, edgePulse0.getWeightTime());
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse((-323));
      EdgePulse edgePulse0 = new EdgePulse((-323), (-323), vertexPulse0, vertexPulse0, Integer.MAX_VALUE);
      int int0 = edgePulse0.getID();
      assertEquals((-323), edgePulse0.getWeightTime());
      assertEquals(Integer.MAX_VALUE, int0);
      assertEquals((-323), edgePulse0.getWeightDist());
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse((-4268));
      EdgePulse edgePulse0 = vertexPulse0.getReversedEdges();
      int int0 = edgePulse0.getWeightTime();
      assertEquals(1, int0);
      assertEquals((-1), edgePulse0.getID());
      assertEquals(1, edgePulse0.getWeightDist());
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      EdgePulse edgePulse0 = new EdgePulse(23, 0, (VertexPulse) null, (VertexPulse) null, (-2719));
      edgePulse0.getNext();
      assertEquals(23, edgePulse0.getWeightDist());
      assertEquals((-2719), edgePulse0.getID());
      assertEquals(0, edgePulse0.getWeightTime());
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse(0);
      EdgePulse edgePulse0 = new EdgePulse((-2092), (-2092), vertexPulse0, vertexPulse0, 0);
      int int0 = edgePulse0.getWeightDist();
      assertEquals((-2092), edgePulse0.getWeightTime());
      assertEquals((-2092), int0);
      assertEquals(0, edgePulse0.getID());
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      EdgePulse edgePulse0 = new EdgePulse(23, 0, (VertexPulse) null, (VertexPulse) null, (-2719));
      edgePulse0.setNextE((EdgePulse) null);
      assertEquals((-2719), edgePulse0.getID());
      assertEquals(0, edgePulse0.getWeightTime());
      assertEquals(23, edgePulse0.getWeightDist());
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse((-1579));
      EdgePulse edgePulse0 = new EdgePulse((-2671), 272, vertexPulse0, vertexPulse0, 0);
      int int0 = edgePulse0.getCompareCriteria();
      assertEquals(272, edgePulse0.getWeightTime());
      assertEquals(0, edgePulse0.getID());
      assertEquals((-2), int0);
      assertEquals((-2671), edgePulse0.getWeightDist());
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      EdgePulse edgePulse0 = new EdgePulse(23, 0, (VertexPulse) null, (VertexPulse) null, (-2719));
      edgePulse0.addNextCommonTailEdge((EdgePulse) null);
      assertEquals(23, edgePulse0.getWeightDist());
      assertEquals(0, edgePulse0.getWeightTime());
      assertEquals((-2719), edgePulse0.getID());
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse((-1579));
      EdgePulse edgePulse0 = new EdgePulse((-2671), 272, vertexPulse0, vertexPulse0, 0);
      EdgePulse edgePulse1 = edgePulse0.findEdgebyTarget(vertexPulse0);
      assertEquals((-2671), edgePulse1.getWeightDist());
      assertEquals(0, edgePulse1.getID());
      assertEquals(272, edgePulse1.getWeightTime());
      assertNotNull(edgePulse1);
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      EdgePulse edgePulse0 = new EdgePulse(23, 0, (VertexPulse) null, (VertexPulse) null, (-2719));
      // Undeclared exception!
      try { 
        edgePulse0.findEdgebyTarget((VertexPulse) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("dimacs9.EdgePulse", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse(641);
      vertexPulse0.minDist = 1767;
      vertexPulse0.setMinTime(4195);
      EdgePulse edgePulse0 = vertexPulse0.getReversedEdges();
      EdgePulse edgePulse1 = edgePulse0.findEdgebyTarget(vertexPulse0);
      assertEquals(1, edgePulse1.getWeightTime());
      assertEquals(1, edgePulse1.getWeightDist());
      assertNotNull(edgePulse1);
      assertEquals((-1), edgePulse1.getID());
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse((-323));
      EdgePulse edgePulse0 = new EdgePulse((-323), (-323), vertexPulse0, vertexPulse0, Integer.MAX_VALUE);
      EdgePulse edgePulse1 = edgePulse0.findEdgebyTarget(vertexPulse0);
      assertEquals((-323), edgePulse1.getWeightTime());
      assertNotNull(edgePulse1);
      assertEquals(Integer.MAX_VALUE, edgePulse1.getID());
      assertEquals((-323), edgePulse1.getWeightDist());
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse(0);
      EdgePulse edgePulse0 = new EdgePulse(0, 684, vertexPulse0, vertexPulse0, 1825);
      EdgePulse edgePulse1 = edgePulse0.findEdgebyTarget(vertexPulse0);
      assertEquals(684, edgePulse1.getWeightTime());
      assertEquals(0, edgePulse1.getWeightDist());
      assertEquals(1825, edgePulse1.getID());
      assertNotNull(edgePulse1);
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse(641);
      vertexPulse0.minDist = 1767;
      vertexPulse0.setMinTime(4195);
      EdgePulse edgePulse0 = vertexPulse0.getReversedEdges();
      int int0 = edgePulse0.getCompareCriteria();
      assertEquals(5962, int0);
      assertEquals(1, edgePulse0.getWeightTime());
      assertEquals(1, edgePulse0.getWeightDist());
      assertEquals((-1), edgePulse0.getID());
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse((-4268));
      EdgePulse edgePulse0 = vertexPulse0.getReversedEdges();
      int int0 = edgePulse0.getID();
      assertEquals((-1), int0);
      assertEquals(1, edgePulse0.getWeightDist());
      assertEquals(1, edgePulse0.getWeightTime());
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse(0);
      EdgePulse edgePulse0 = new EdgePulse((-2092), (-2092), vertexPulse0, vertexPulse0, 0);
      int int0 = edgePulse0.getID();
      assertEquals((-2092), edgePulse0.getWeightDist());
      assertEquals((-2092), edgePulse0.getWeightTime());
      assertEquals(0, int0);
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse((-1579));
      EdgePulse edgePulse0 = new EdgePulse((-2671), 272, vertexPulse0, vertexPulse0, 0);
      edgePulse0.addNextCommonTailEdge(edgePulse0);
      EdgePulse edgePulse1 = edgePulse0.getNext();
      assertEquals(272, edgePulse1.getWeightTime());
      assertEquals(0, edgePulse1.getID());
      assertEquals((-2671), edgePulse1.getWeightDist());
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse(641);
      vertexPulse0.setMaxTime((-256));
      EdgePulse edgePulse0 = vertexPulse0.getReversedEdges();
      edgePulse0.getSource();
      assertEquals(1, edgePulse0.getWeightDist());
      assertEquals(1, edgePulse0.getWeightTime());
      assertEquals((-1), edgePulse0.getID());
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse(641);
      EdgePulse edgePulse0 = vertexPulse0.getReversedEdges();
      vertexPulse0.setInsertedTime();
      edgePulse0.getSource();
      assertEquals(1, edgePulse0.getWeightDist());
      assertEquals((-1), edgePulse0.getID());
      assertEquals(1, edgePulse0.getWeightTime());
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      VertexPulse vertexPulse0 = new VertexPulse(0);
      EdgePulse edgePulse0 = new EdgePulse((-2092), (-2092), vertexPulse0, vertexPulse0, 0);
      edgePulse0.getTarget();
      assertEquals(0, edgePulse0.getID());
      assertEquals((-2092), edgePulse0.getWeightDist());
      assertEquals((-2092), edgePulse0.getWeightTime());
  }
}
